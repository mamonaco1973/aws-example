name: Build Lambdas # Pipeline name, indicating it builds the required infrastructure.

on:
  workflow_dispatch: # Currently, the pipeline can only be triggered manually.

jobs:
  validate: # The first job, responsible for validating the Terraform configuration before deployment.
    runs-on: ubuntu-latest # Specifies the job runs on the latest Ubuntu runner.

    steps: # Each step defines a task within the validation process.

      - name: Checkout Code # Fetches the repository's code.
        uses: actions/checkout@v3 # Uses GitHub's official action to pull the code.

      - name: Set Environment Variables # Sets AWS credentials for Terraform.
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV # Sets the AWS access key from secrets as an environment variable.
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV # Sets the AWS secret key from secrets as an environment variable.
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV # Sets the AWS region from secrets as an environment variable.

      - name: Setup Terraform # Installs the specified version of Terraform.
        uses: hashicorp/setup-terraform@v2 # Uses the official HashiCorp action for Terraform setup.

      - name: Terraform Validate # Validates the Terraform configuration for correctness.
        run: |
          cd ./05-lambda # Navigate to the Terraform directory containing the configuration files.
          terraform init # Initializes Terraform by downloading necessary plugins and providers.
          terraform validate # Validates the configuration for syntax and semantic errors.

      - name: Terraform Plan # Generates a plan to preview changes Terraform will make to the infrastructure.
        run: |
          cd ./05-lambda # Navigate to the Terraform directory.
          terraform plan # Creates a detailed plan of proposed infrastructure changes.

  apply: # The second job, which applies the validated Terraform configuration to build the infrastructure.
    needs: validate # Ensures this job runs only if the "validate" job completes successfully.
    runs-on: ubuntu-latest # Specifies the job runs on the latest Ubuntu runner.

    steps: # Steps define the tasks involved in the deployment process.

      - name: Checkout Code # Fetches the repository's code.
        uses: actions/checkout@v3 # Uses GitHub's official action to pull the code.

      - name: Set Environment Variables # Sets AWS credentials for Terraform.
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV # Sets the AWS access key from secrets as an environment variable.
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV # Sets the AWS secret key from secrets as an environment variable.
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV # Sets the AWS region from secrets as an environment variable.

      - name: Build Infrastructure and AMI # Deploys the infrastructure using Terraform.
        run: |
          cd 05-lambda
          echo "NOTE: Zipping lambda code into lambda.zip"
          cd code
          rm -f -r lambdas.zip
          zip lambdas.zip *.py
          cd ..
          echo "NOTE: Building API/Lambda Version in phase 6."
          terraform init
          terraform apply -auto-approve

