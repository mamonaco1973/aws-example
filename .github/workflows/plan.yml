name: Generate Infrastructure Plan # The name of the pipeline, highlighting its purpose to generate an infrastructure plan.

on:
  # push: # Triggers the pipeline automatically when code is pushed to the specified branch.
  #   branches:
  #     - main # Restricts the trigger to pushes on the "main" branch.
  workflow_dispatch: # Allows manual triggering of the pipeline via the GitHub Actions UI.

jobs:
  validate: # The only job in the pipeline, responsible for validating and planning infrastructure changes.
    runs-on: ubuntu-latest # Specifies that the job will execute on the latest version of the Ubuntu GitHub runner.

    steps: # Steps define the individual tasks to perform during the job.

      - name: Checkout Code # Step to fetch the source code from the repository.
        uses: actions/checkout@v3 # Uses the official GitHub action to pull repository contents, ensuring access to the Terraform files.

      - name: Set Environment Variables # Configures AWS credentials and region for Terraform commands.
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV # Exposes the AWS access key as an environment variable.
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV # Exposes the AWS secret key as an environment variable.
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV # Sets the default AWS region for all AWS CLI and Terraform operations.

      - name: Setup Terraform # Installs and configures the required version of Terraform.
        uses: hashicorp/setup-terraform@v2 # Utilizes the official HashiCorp action to set up Terraform.
        # Defaults to the latest stable version unless specified otherwise.

      - name: Terraform Validate # Validates the Terraform configuration for correctness and errors.
        run: |
          cd ./01-infrastructure # Navigate to the Terraform configuration directory.
          terraform init # Initializes Terraform by downloading necessary plugins and modules.
          terraform validate # Ensures the configuration files are syntactically and semantically correct.
          cd ..
          cd ./04-ecs
          terraform init
          terraform validate

      - name: Terraform Plan # Generates a plan to preview the infrastructure changes Terraform will make.
        run: |
          cd ./01-infrastructure # Navigate to the Terraform configuration directory.
          terraform plan # Creates a detailed plan of the proposed changes, showing resources to be added, modified, or destroyed.